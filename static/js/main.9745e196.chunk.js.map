{"version":3,"sources":["components/PatientItem/PatientItem.js","services/RequestService.js","contexts/ParientsContext.js","components/PatientList/PatientList.js","components/CreatePatient/CreatePatient.js","components/CommentItem/CommentItem.js","components/CommentList/CommentList.js","components/PatientInfo/PatientInfo.js","components/UpdatePatient/UpdatePatient.js","App.js","index.js"],"names":["PatientItem","patient","id","className","to","firstName","lastName","Date","birthday","toLocaleDateString","year","month","day","gender","toLowerCase","RequestService","axios","get","post","headers","put","delete","comment","PatientsContext","createContext","PatientsProvider","props","useState","patients","setPatients","isLoad","setLoad","router","useHistory","patientsCache","useMemo","readAllPatients","then","response","data","location","pathname","push","catch","error","console","log","request","url","Provider","value","PatientList","useContext","searchValue","setSearchValue","type","placeholder","onChange","e","target","onClick","filter","includes","map","CreatePatient","country","state","address","setPatient","htmlFor","name","required","disabled","event","preventDefault","createPatient","comments","CommentItem","remove","isVisible","setVisible","newComment","setNewComment","createdAt","hour12","hour","minute","second","text","deleteComment","updateComment","CommentList","params","useParams","result","find","p","Number","setComments","patientId","setComment","removeComment","c","useEffect","toISOString","createComment","PatientInfo","ageDiffInMs","now","ageDate","Math","abs","getUTCFullYear","getYearsOld","deletePatient","UpdatePatient","updatePatient","findIndex","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9745e196.chunk.js","sourcesContent":["import {Link} from \"react-router-dom\";\r\nimport \"./PatientItem.css\"\r\n\r\nconst PatientItem = ({patient, ...props}) => {\r\n    return (\r\n        <li id=\"patient-item\" className=\"alert alert-secondary\">\r\n            <Link to={'/patient/' + patient.id + '/info'} >\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        <span className=\"fs-4\">{patient.firstName} {patient.lastName}</span><br/>\r\n                        <time>{new Date(patient.birthday).toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</time>\r\n                    </div>\r\n                    <i className={`fa fa-${patient.gender.toLowerCase()} fa-2x mt-3`} aria-hidden=\"true\" />\r\n                </div>\r\n\r\n            </Link>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default PatientItem;","import axios from \"axios\";\r\n\r\nexport default class RequestService {\r\n    static async readAllPatients() {\r\n        return await axios.get('https://patient-webapi.herokuapp.com/patients/');\r\n    }\r\n\r\n    static async readPatientById(id) {\r\n        return await axios.get('https://patient-webapi.herokuapp.com/patients/' + id);\r\n    }\r\n\r\n    static async createPatient(patient) {\r\n        return await axios.post('https://patient-webapi.herokuapp.com/patients/', patient, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static async readAllCommentsByPatientId(id) {\r\n        return await axios.get('https://patient-webapi.herokuapp.com/comments/patients/' + id);\r\n    }\r\n\r\n    static async updatePatient(patient) {\r\n        return await axios.put('https://patient-webapi.herokuapp.com/patients/', patient, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static async deletePatient(id) {\r\n        return await axios.delete('https://patient-webapi.herokuapp.com/patients/' + id);\r\n    }\r\n\r\n    static async createComment(comment) {\r\n        return await axios.post('https://patient-webapi.herokuapp.com/comments/', comment, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static async updateComment(comment) {\r\n        return await axios.put('https://patient-webapi.herokuapp.com/comments/', comment, {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        });\r\n    }\r\n\r\n    static async deleteComment(id) {\r\n        return await axios.delete('https://patient-webapi.herokuapp.com/comments/' + id);\r\n    }\r\n}","import {createContext, useMemo, useState} from \"react\";\r\nimport RequestService from \"../services/RequestService\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nconst PatientsContext = createContext();\r\n\r\nfunction PatientsProvider(props) {\r\n    const [patients, setPatients] = useState([])\r\n    const [isLoad, setLoad] = useState(false);\r\n    const router = useHistory();\r\n\r\n    const patientsCache = useMemo(() => {\r\n        if (!isLoad) {\r\n            RequestService.readAllPatients()\r\n                .then(response => {\r\n                    setPatients(response.data)\r\n                    setLoad(true);\r\n                    if (router.location.pathname === \"/\") {\r\n                        router.push({ pathname: '/patient/' +  response.data[0].id + '/info'});\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error.response) {\r\n                        console.log(error.response.data);\r\n                    } else if (error.request) {\r\n                        console.log(error.request.url);\r\n                    } else {\r\n                        console.log(\"Unknown error!\");\r\n                    }\r\n                });\r\n        }\r\n        return [patients, setPatients];\r\n    }, [isLoad, patients, router]);\r\n\r\n    return <PatientsContext.Provider value={patientsCache} {...props} />\r\n}\r\n\r\nexport {PatientsProvider, PatientsContext}","import React, {useContext, useState} from 'react';\r\nimport PatientItem from \"../PatientItem/PatientItem\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport './PatientList.css';\r\nimport {PatientsContext, usePatients} from \"../../contexts/ParientsContext\";\r\n\r\nconst PatientList = (props) => {\r\n\r\n    const [patients] = useContext(PatientsContext);\r\n    const [searchValue, setSearchValue] = useState('');\r\n    const router = useHistory();\r\n\r\n    function addNewPatientHandler() {\r\n        router.push({ pathname: '/patient/create' });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"d-inline-flex my-4 mx-2\">\r\n                <input type=\"search\"  placeholder=\"Search...\" value={searchValue}\r\n                       onChange={(e) => setSearchValue(e.target.value)}\r\n                       className=\"form-control\" id=\"patient-search-field\"/>\r\n                <button onClick={addNewPatientHandler} className=\"btn btn-success ms-2\" id=\"patient-create-bnt\">New Patient</button>\r\n            </div>\r\n            <ul className=\"no-list mx-3\">\r\n                {\r\n                    patients\r\n                        .filter(patient => searchValue.toLowerCase() === ''\r\n                            || patient.firstName.toLowerCase().includes(searchValue)\r\n                            || patient.lastName.toLowerCase().includes(searchValue))\r\n                        .map(patient => {\r\n                        return <PatientItem patient={patient} key={patient.id}/>\r\n                    })\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientList;","import React, {useContext, useState} from 'react';\r\nimport RequestService from \"../../services/RequestService\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {PatientsContext, usePatients} from \"../../contexts/ParientsContext\";\r\n\r\nconst CreatePatient = (props) => {\r\n\r\n    const [patient, setPatient] = useState({\r\n        firstName: '',\r\n        lastName: '',\r\n        birthday: '',\r\n        gender: '',\r\n        country: '',\r\n        state: '',\r\n        address: ''\r\n    })\r\n    const [patients, setPatients] = useContext(PatientsContext);\r\n    const router = useHistory();\r\n\r\n    function createPatientHandler(event) {\r\n        event.preventDefault();\r\n\r\n        RequestService.createPatient(patient)\r\n            .then(response => {\r\n                const patient = response.data;\r\n                patient.comments = [];\r\n                console.log(patient);\r\n\r\n                setPatients([...patients, patient]);\r\n                router.push({ pathname: '/patient/' +  patient.id + '/info'});\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function cancelPatientHandler() {\r\n        router.push({ pathname: '/'});\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-4 mx-5\">\r\n            <div className=\"col-xxl-7 col-xl-8 col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                <p className=\"fs-3\">Create new Patient</p>\r\n                <hr/>\r\n                <form >\r\n                    <label htmlFor=\"first-name\" className=\"form-label\">First Name:</label>\r\n                    <input id=\"first-name\" name=\"first-name\" type=\"text\" className=\"form-control\" value={patient.firstName}\r\n                           onChange={(e) => setPatient({...patient,  firstName: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"last-name\" className=\"form-label\">Last Name:</label>\r\n                    <input id=\"last-name\" name=\"last-name\" type=\"text\" className=\"form-control\" value={patient.lastName}\r\n                           onChange={(e) => setPatient({...patient,  lastName: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"birthday\" className=\"form-label\">Date of Birth:</label>\r\n                    <input id=\"birthday\" name=\"birthday\" type=\"date\" className=\"form-control\" value={patient.birthday}\r\n                           onChange={(e) => setPatient({...patient,  birthday: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"gender\" className=\"form-label\">Sex:</label>\r\n                    <select id=\"gender\" name=\"gender\" className=\"form-control\"  value={patient.gender}\r\n                            onChange={(e) => setPatient({...patient,  gender: e.target.value})}>\r\n                        <option disabled value=\"\">Select sex...</option>\r\n                        <option value=\"MALE\">Male</option>\r\n                        <option value=\"FEMALE\">Female</option>\r\n                    </select><br/>\r\n\r\n                    <label htmlFor=\"country\" className=\"form-label\">Country:</label>\r\n                    <input id=\"country\" name=\"country\" type=\"text\" className=\"form-control\" value={patient.country}\r\n                           onChange={(e) => setPatient({...patient,  country: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n                    <input id=\"state\" name=\"state\" type=\"text\" className=\"form-control\" value={patient.state}\r\n                           onChange={(e) => setPatient({...patient,  state: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"address\" className=\"form-label\">Address:</label>\r\n                    <input id=\"address\" name=\"address\" type=\"text\" className=\"form-control\" value={patient.address}\r\n                           onChange={(e) => setPatient({...patient,  address: e.target.value})}required /><br/>\r\n\r\n                    <button className=\"btn btn-primary w-25\" onClick={createPatientHandler}>Save</button>\r\n                    <button className=\"btn btn-warning w-25 ms-3\" onClick={cancelPatientHandler}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePatient;","import React, {useState} from 'react';\r\nimport RequestService from \"../../services/RequestService\";\r\nimport \"./CommentItem.css\"\r\n\r\nconst CommentItem = ({comment, remove, ...props}) => {\r\n\r\n    const [isVisible, setVisible] = useState(true);\r\n    const [newComment, setNewComment] = useState(comment);\r\n\r\n    function editCommentHandler() {\r\n        setVisible(false);\r\n    }\r\n\r\n    function saveCommentHandler() {\r\n        setVisible(true);\r\n        console.log(comment);\r\n\r\n        RequestService.updateComment(newComment)\r\n            .then(response => setNewComment(response.data))\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function deleteCommentHandler() {\r\n        RequestService.deleteComment(newComment.id)\r\n            .then(response => {\r\n                remove(newComment);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function cancelCommentHandler() {\r\n        setNewComment(newComment)\r\n        setVisible(true);\r\n    }\r\n\r\n    return (\r\n        <li className=\"alert alert-light d-flex justify-content-between\">\r\n            <div id=\"comment-item\" className=\"flex-grow-1\">\r\n                {\r\n                    isVisible\r\n                        ? <div>\r\n                            <time className=\"fs-5\">{new Date(comment.createdAt).toLocaleDateString(\"en-US\",\r\n                                {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit' })}\r\n                            </time>\r\n                            <p className=\"pt-2 mb-0\">{newComment.text}</p>\r\n                        </div>\r\n                        : <div>\r\n                            <time className=\"fs-5\">{new Date(comment.createdAt).toLocaleDateString(\"en-US\",\r\n                                {hour12: false, year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit', second: '2-digit' })}\r\n                            </time><br/>\r\n                            <textarea className=\"form-control mt-2\" value={newComment.text}\r\n                                      onChange={(e) => {setNewComment({...newComment, text: e.target.value})}} />\r\n                        </div>\r\n                }\r\n            </div>\r\n            <div id=\"comment-btn\">\r\n                {\r\n                    isVisible\r\n                        ? <div>\r\n                              <button onClick={editCommentHandler} className=\"btn btn-primary btn-sm ms-3\">Edit</button>\r\n                              <button onClick={deleteCommentHandler} className=\"btn btn-danger btn-sm ms-1\">Delete</button>\r\n                          </div>\r\n                        : <div>\r\n                              <button onClick={saveCommentHandler} className=\"btn btn-success btn-sm ms-3\">Save</button>\r\n                              <button onClick={cancelCommentHandler} className=\"btn btn-warning btn-sm ms-1\">Cancel</button>\r\n                          </div>\r\n                }\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default CommentItem;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useParams} from \"react-router-dom\";\r\nimport RequestService from \"../../services/RequestService\";\r\nimport CommentItem from \"../CommentItem/CommentItem\";\r\nimport \"./CommentList.css\"\r\nimport {PatientsContext} from \"../../contexts/ParientsContext\";\r\n\r\nconst CommentList = (props) => {\r\n    const params = useParams();\r\n    const [patients] = useContext(PatientsContext);\r\n    const [comments, setComments] = useState(() => {\r\n        const result = patients.find(p => p.id === Number(params.id)).comments\r\n        if (result) return result;\r\n        return [];\r\n    });\r\n    const [comment, setComment] = useState({\r\n        text: '',\r\n        createdAt: '',\r\n        patientId: 0\r\n    })\r\n\r\n    useEffect(() => {\r\n        setComments(patients.find(p => p.id === Number(params.id)).comments);\r\n    }, [params.id]);\r\n\r\n    function createCommentHandler(event) {\r\n        event.preventDefault();\r\n\r\n        const newComment = {\r\n            ...comment,\r\n            createdAt: new Date().toISOString(),\r\n            patientId: params.id\r\n        }\r\n\r\n        RequestService.createComment(newComment)\r\n            .then(response => {\r\n                setComments([...comments, response.data]);\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function removeComment(comment) {\r\n        setComments(comments.filter(c => c.id !== comment.id));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"fs-3 ms-4\">Comments:</p>\r\n            <div className=\"alert alert-secondary pb-0\">\r\n                <ul id=\"comment-list\" className=\"no-list\">\r\n                    {\r\n                        comments.map(comment => {\r\n                            comment.patientId = params.id;\r\n                            return <CommentItem comment={comment} remove={removeComment} key={comment.id}/>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n            <div className=\"alert alert-secondary\">\r\n                <form id=\"comment-form\" className=\"d-flex form-floating\">\r\n                    <textarea className=\"form-control\" id=\"floatingTextarea\" placeholder=\"Leave a comment here\" name=\"text\" value={comment.text}\r\n                            onChange={(e) => setComment({...comment, text: e.target.value})} />\r\n                    <label htmlFor=\"floatingTextarea\">Leave a comment here...</label>\r\n                    <button onClick={createCommentHandler} className=\"btn btn-success ms-2\">Add</button>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CommentList;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport RequestService from \"../../services/RequestService\";\r\nimport CommentList from \"../CommentList/CommentList\";\r\nimport {PatientsContext} from \"../../contexts/ParientsContext\";\r\n\r\nconst PatientInfo = (props) => {\r\n\r\n    const [patients, setPatients] = useContext(PatientsContext);\r\n    const params = useParams();\r\n    const [patient, setPatient] = useState(patients.find(p => p.id === Number(params.id)));\r\n    const router = useHistory();\r\n\r\n    useEffect(() => {\r\n        setPatient(patients.find(p => p.id === Number(params.id)));\r\n    }, [params.id]);\r\n\r\n    function editPatientHandler() {\r\n        router.push({ pathname: '/patient/' + patient.id + '/update' });\r\n    }\r\n\r\n    function deletePatientHandler() {\r\n        RequestService.deletePatient(params.id)\r\n            .then(response => {\r\n                setPatients(patients.filter(p => p.id !== Number(params.id)));\r\n                router.push({ pathname: '/patient/' +  patients[0].id + '/info'});\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function getYearsOld(birthday) {\r\n        let ageDiffInMs = Date.now() - new Date(birthday);\r\n        let ageDate = new Date(ageDiffInMs);\r\n        return Math.abs(ageDate.getUTCFullYear() - 1970);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row my-4\">\r\n            <div className=\"col-xxl-4 col-xl-5 col-lg-12 col-md-12 col-sm-12 col-xs-12 pe-4\">\r\n                <div>\r\n                    <div className=\"d-flex justify-content-between mx-4\">\r\n                        <span className=\"fs-3\">{patient.firstName} {patient.lastName}</span>\r\n                        <span className=\"fs-5 mt-1\">{getYearsOld(patient.birthday)} years old</span>\r\n                    </div>\r\n\r\n                    <div className=\"alert alert-secondary mt-3\">\r\n                        <div className=\"alert alert-light d-flex fs-5\">\r\n                            <ul className=\"no-list pe-3 mb-1\">\r\n                                <li>Date of Birth:</li>\r\n                                <li>Sex:</li>\r\n                                <li>Country:</li>\r\n                                <li>State:</li>\r\n                                <li>Address:</li>\r\n                            </ul>\r\n                            <ul className=\"no-list fst-italic pe-3 mb-1\">\r\n                                <li>{new Date(patient.birthday).toLocaleDateString(\"en-US\", { year: 'numeric', month: 'long', day: 'numeric' })}</li>\r\n                                <li className=\"text-lowercase\">{patient.gender}</li>\r\n                                <li>{patient.country}</li>\r\n                                <li>{patient.state}</li>\r\n                                <li>{patient.address}</li>\r\n                            </ul>\r\n                        </div>\r\n                        {/*<hr/>*/}\r\n                        <div className=\"mt-4\">\r\n                            <button onClick={editPatientHandler} className=\"btn btn-primary w-25 me-3\">Edit</button>\r\n                            <button onClick={deletePatientHandler} className=\"btn btn-danger w-25\">Delete</button>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <div className=\"col-xxl-8 col-xl-7 col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n                <CommentList />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientInfo;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory, useParams} from \"react-router-dom\";\r\nimport RequestService from \"../../services/RequestService\";\r\nimport {PatientsContext} from \"../../contexts/ParientsContext\";\r\n\r\nconst UpdatePatient = (props) => {\r\n\r\n    const [patients, setPatients] = useContext(PatientsContext);\r\n    const params = useParams();\r\n    const [patient, setPatient] = useState(patients.find(p => p.id === Number(params.id)));\r\n    const router = useHistory();\r\n\r\n    function updatePatientHandler(event) {\r\n        event.preventDefault();\r\n        RequestService.updatePatient(patient)\r\n            .then(response => {\r\n                patients[patients.findIndex(p => p.id === patient.id)] = patient;\r\n                setPatients(patients);\r\n                router.push({ pathname: '/patient/' +  response.data.id + '/info'});\r\n            })\r\n            .catch(error => {\r\n                if (error.response) {\r\n                    console.log(error.response.data);\r\n                } else if (error.request) {\r\n                    console.log(error.request.url);\r\n                } else {\r\n                    console.log(\"Unknown error!\");\r\n                }\r\n            });\r\n    }\r\n\r\n    function cancelPatientHandler() {\r\n        router.push({ pathname: '/patient/' +  patient.id + '/info'});\r\n    }\r\n\r\n    return (\r\n        <div className=\"row mt-4 mx-5\">\r\n            <div className=\"col-xxl-7 col-xl-8 col-lg-9 col-md-12 col-sm-12 col-xs-12\">\r\n                <p className=\"fs-3\">{patient.firstName} {patient.lastName}</p>\r\n                <hr/>\r\n                <form >\r\n                    <label htmlFor=\"first-name\" className=\"form-label\">First Name:</label>\r\n                    <input id=\"first-name\" name=\"first-name\" type=\"text\" className=\"form-control\" value={patient.firstName}\r\n                           onChange={(e) => setPatient({...patient,  firstName: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"last-name\" className=\"form-label\">Last Name:</label>\r\n                    <input id=\"last-name\" name=\"last-name\" type=\"text\" className=\"form-control\" value={patient.lastName}\r\n                           onChange={(e) => setPatient({...patient,  lastName: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"birthday\" className=\"form-label\">Date of Birth:</label>\r\n                    <input id=\"birthday\" name=\"birthday\" type=\"date\" className=\"form-control\" value={patient.birthday}\r\n                           onChange={(e) => setPatient({...patient,  birthday: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"gender\" className=\"form-label\">Sex:</label>\r\n                    <select id=\"gender\" name=\"gender\" className=\"form-control\"  value={patient.gender}\r\n                            onChange={(e) => setPatient({...patient,  gender: e.target.value})}>\r\n                        <option disabled value=\"\">Select sex...</option>\r\n                        <option value=\"MALE\">Male</option>\r\n                        <option value=\"FEMALE\">Female</option>\r\n                    </select><br/>\r\n\r\n                    <label htmlFor=\"country\" className=\"form-label\">Country:</label>\r\n                    <input id=\"country\" name=\"country\" type=\"text\" className=\"form-control\" value={patient.country}\r\n                           onChange={(e) => setPatient({...patient,  country: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"state\" className=\"form-label\">State:</label>\r\n                    <input id=\"state\" name=\"state\" type=\"text\" className=\"form-control\" value={patient.state}\r\n                           onChange={(e) => setPatient({...patient,  state: e.target.value})} required /><br/>\r\n\r\n                    <label htmlFor=\"address\" className=\"form-label\">Address:</label>\r\n                    <input id=\"address\" name=\"address\" type=\"text\" className=\"form-control\" value={patient.address}\r\n                           onChange={(e) => setPatient({...patient,  address: e.target.value})}required /><br/>\r\n\r\n                    <button className=\"btn btn-primary w-25\" onClick={updatePatientHandler}>Update</button>\r\n                    <button className=\"btn btn-warning w-25 ms-3\" onClick={cancelPatientHandler}>Cancel</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdatePatient;","import React from \"react\";\nimport PatientList from \"./components/PatientList/PatientList\";\nimport CreatePatient from \"./components/CreatePatient/CreatePatient\";\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport PatientInfo from \"./components/PatientInfo/PatientInfo\";\nimport UpdatePatient from \"./components/UpdatePatient/UpdatePatient\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"./App.css\";\nimport {PatientsProvider} from \"./contexts/ParientsContext\";\n\nfunction App() {\n\n    return (\n        <div className=\"container-fluid px-xxl-5 px-xl-5 px-lg-4 px-md-3 pt-4\">\n            <div className=\"row\">\n                <BrowserRouter>\n                    <PatientsProvider>\n                        <div className=\"col-xxl-3 col-xl-3 col-lg-4 col-md-5 col-sm-12 col-xs-12\">\n                            <Route exact path={[\n                                '/',\n                                '/patient/create',\n                                '/patient/:id/update',\n                                '/patient/:id/info'\n                            ]} component={ PatientList } />\n                        </div>\n                        <Switch>\n                            <div className=\"col-xxl-9 col-xl-9 col-lg-8 col-md-7 col-sm-12 col-xs-12\">\n                                <Route exact path='/patient/:id/info' component={ PatientInfo } />\n                                <Route exact path='/patient/create' component={ CreatePatient } />\n                                <Route exact path='/patient/:id/update' component={ UpdatePatient } />\n                                <Redirect to=\"/\" />\n                            </div>\n                        </Switch>\n                    </PatientsProvider>\n                </BrowserRouter>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);"],"sourceRoot":""}